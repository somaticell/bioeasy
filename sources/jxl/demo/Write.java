package jxl.demo;

import com.alibaba.fastjson.asm.Opcodes;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import jxl.CellReferenceHelper;
import jxl.CellView;
import jxl.HeaderFooter;
import jxl.Range;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.biff.DisplayFormat;
import jxl.format.Alignment;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.format.CellFormat;
import jxl.format.Colour;
import jxl.format.Orientation;
import jxl.format.PageOrientation;
import jxl.format.PaperSize;
import jxl.format.ScriptStyle;
import jxl.format.UnderlineStyle;
import jxl.write.Boolean;
import jxl.write.DateFormat;
import jxl.write.DateFormats;
import jxl.write.DateTime;
import jxl.write.Formula;
import jxl.write.Label;
import jxl.write.Number;
import jxl.write.NumberFormat;
import jxl.write.NumberFormats;
import jxl.write.WritableCellFeatures;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableHyperlink;
import jxl.write.WritableImage;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

public class Write {
    private String filename;
    private WritableWorkbook workbook;

    public Write(String fn) {
        this.filename = fn;
    }

    public void write() throws IOException, WriteException {
        WorkbookSettings ws = new WorkbookSettings();
        ws.setLocale(new Locale("en", "EN"));
        this.workbook = Workbook.createWorkbook(new File(this.filename), ws);
        WritableSheet s2 = this.workbook.createSheet("Number Formats", 0);
        WritableSheet s3 = this.workbook.createSheet("Date Formats", 1);
        WritableSheet s1 = this.workbook.createSheet("Label Formats", 2);
        WritableSheet s4 = this.workbook.createSheet("Borders", 3);
        WritableSheet s5 = this.workbook.createSheet("Labels", 4);
        WritableSheet s6 = this.workbook.createSheet("Formulas", 5);
        WritableSheet s7 = this.workbook.createSheet("Images", 6);
        writeLabelFormatSheet(s1);
        writeNumberFormatSheet(s2);
        writeDateFormatSheet(s3);
        writeBordersSheet(s4);
        writeLabelsSheet(s5);
        writeFormulaSheet(s6);
        writeImageSheet(s7);
        this.workbook.setColourRGB(Colour.LIME, 255, 0, 0);
        this.workbook.addNameArea("namedrange", s4, 1, 11, 5, 14);
        this.workbook.write();
        this.workbook.close();
    }

    private void writeNumberFormatSheet(WritableSheet s) throws WriteException {
        WritableCellFormat writableCellFormat = new WritableCellFormat(WritableWorkbook.ARIAL_10_PT);
        writableCellFormat.setWrap(true);
        s.setColumnView(0, 20);
        s.setColumnView(4, 20);
        s.setColumnView(5, 20);
        s.setColumnView(6, 20);
        s.addCell(new Label(0, 0, "+/- Pi - default format", writableCellFormat));
        s.addCell(new Number(1, 0, 3.1415926535d));
        s.addCell(new Number(2, 0, -3.1415926535d));
        s.addCell(new Label(0, 1, "+/- Pi - integer format", writableCellFormat));
        WritableCellFormat cf1 = new WritableCellFormat(NumberFormats.INTEGER);
        s.addCell(new Number(1, 1, 3.1415926535d, cf1));
        s.addCell(new Number(2, 1, -3.1415926535d, cf1));
        s.addCell(new Label(0, 2, "+/- Pi - float 2dps", writableCellFormat));
        WritableCellFormat cf2 = new WritableCellFormat(NumberFormats.FLOAT);
        s.addCell(new Number(1, 2, 3.1415926535d, cf2));
        s.addCell(new Number(2, 2, -3.1415926535d, cf2));
        s.addCell(new Label(0, 3, "+/- Pi - custom 3dps", writableCellFormat));
        WritableCellFormat writableCellFormat2 = new WritableCellFormat((DisplayFormat) new NumberFormat("#.###"));
        s.addCell(new Number(1, 3, 3.1415926535d, writableCellFormat2));
        s.addCell(new Number(2, 3, -3.1415926535d, writableCellFormat2));
        s.addCell(new Label(0, 4, "+/- Pi - custom &3.14", writableCellFormat));
        WritableCellFormat writableCellFormat3 = new WritableCellFormat((DisplayFormat) new NumberFormat("&#.00"));
        s.addCell(new Number(1, 4, 3.1415926535d, writableCellFormat3));
        s.addCell(new Number(2, 4, -3.1415926535d, writableCellFormat3));
        s.addCell(new Label(0, 5, "+/- Pi - custom Text #.### Text", writableCellFormat));
        WritableCellFormat writableCellFormat4 = new WritableCellFormat((DisplayFormat) new NumberFormat("Text#.####Text"));
        s.addCell(new Number(1, 5, 3.1415926535d, writableCellFormat4));
        s.addCell(new Number(2, 5, -3.1415926535d, writableCellFormat4));
        s.addCell(new Label(4, 0, "+/- Bilko default format"));
        s.addCell(new Number(5, 0, 1.5042699E7d));
        s.addCell(new Number(6, 0, -1.5042699E7d));
        s.addCell(new Label(4, 1, "+/- Bilko float format"));
        WritableCellFormat writableCellFormat5 = new WritableCellFormat(NumberFormats.FLOAT);
        s.addCell(new Number(5, 1, 1.5042699E7d, writableCellFormat5));
        s.addCell(new Number(6, 1, -1.5042699E7d, writableCellFormat5));
        s.addCell(new Label(4, 2, "+/- Thousands separator"));
        WritableCellFormat writableCellFormat6 = new WritableCellFormat(NumberFormats.THOUSANDS_INTEGER);
        s.addCell(new Number(5, 2, 1.5042699E7d, writableCellFormat6));
        s.addCell(new Number(6, 2, -1.5042699E7d, writableCellFormat6));
        s.addCell(new Label(4, 3, "+/- Accounting red - added 0.01"));
        WritableCellFormat writableCellFormat7 = new WritableCellFormat(NumberFormats.ACCOUNTING_RED_FLOAT);
        s.addCell(new Number(5, 3, 1.504269901E7d, writableCellFormat7));
        s.addCell(new Number(6, 3, -1.504269901E7d, writableCellFormat7));
        s.addCell(new Label(4, 4, "+/- Percent"));
        WritableCellFormat writableCellFormat8 = new WritableCellFormat(NumberFormats.PERCENT_INTEGER);
        s.addCell(new Number(5, 4, 1.5042699E7d, writableCellFormat8));
        s.addCell(new Number(6, 4, -1.5042699E7d, writableCellFormat8));
        s.addCell(new Label(4, 5, "+/- Exponential - 2dps"));
        WritableCellFormat writableCellFormat9 = new WritableCellFormat(NumberFormats.EXPONENTIAL);
        s.addCell(new Number(5, 5, 1.5042699E7d, writableCellFormat9));
        s.addCell(new Number(6, 5, -1.5042699E7d, writableCellFormat9));
        s.addCell(new Label(4, 6, "+/- Custom exponentional - 3dps", writableCellFormat));
        WritableCellFormat writableCellFormat10 = new WritableCellFormat((DisplayFormat) new NumberFormat("0.000E0"));
        s.addCell(new Number(5, 6, 1.5042699E7d, writableCellFormat10));
        s.addCell(new Number(6, 6, -1.5042699E7d, writableCellFormat10));
        s.addCell(new Label(4, 7, "Custom neg brackets", writableCellFormat));
        WritableCellFormat writableCellFormat11 = new WritableCellFormat((DisplayFormat) new NumberFormat("#,##0;(#,##0)"));
        s.addCell(new Number(5, 7, 1.5042699E7d, writableCellFormat11));
        s.addCell(new Number(6, 7, -1.5042699E7d, writableCellFormat11));
        s.addCell(new Label(4, 8, "Custom neg brackets 2", writableCellFormat));
        WritableCellFormat writableCellFormat12 = new WritableCellFormat((DisplayFormat) new NumberFormat("#,##0;(#,##0)a"));
        s.addCell(new Number(5, 8, 1.5042699E7d, writableCellFormat12));
        s.addCell(new Number(6, 8, -1.5042699E7d, writableCellFormat12));
        s.addCell(new Label(4, 9, "Custom percent", writableCellFormat));
        s.addCell(new Number(5, 9, 3.14159265d, new WritableCellFormat((DisplayFormat) new NumberFormat("0.0%"))));
        s.addCell(new Label(0, 10, "Boolean - TRUE"));
        s.addCell(new Boolean(1, 10, true));
        s.addCell(new Label(0, 11, "Boolean - FALSE"));
        s.addCell(new Boolean(1, 11, false));
        s.addCell(new Label(0, 12, "A hidden cell->"));
        s.addCell(new Number(1, 12, 17.0d, WritableWorkbook.HIDDEN_STYLE));
        for (int row = 0; row < 100; row++) {
            for (int col = 8; col < 108; col++) {
                s.addCell(new Number(col, row, (double) (col + row)));
            }
        }
        for (int row2 = 101; row2 < 3000; row2++) {
            for (int col2 = 0; col2 < 25; col2++) {
                s.addCell(new Number(col2, row2, (double) (col2 + row2)));
            }
        }
    }

    private void writeDateFormatSheet(WritableSheet s) throws WriteException {
        WritableCellFormat writableCellFormat = new WritableCellFormat(WritableWorkbook.ARIAL_10_PT);
        writableCellFormat.setWrap(true);
        s.setColumnView(0, 20);
        s.setColumnView(2, 20);
        s.setColumnView(3, 20);
        s.setColumnView(4, 20);
        s.getSettings().setFitWidth(2);
        s.getSettings().setFitHeight(2);
        Calendar c = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        c.set(1975, 4, 31, 15, 21, 45);
        c.set(14, 660);
        Date date = c.getTime();
        c.set(1900, 0, 1, 0, 0, 0);
        c.set(14, 0);
        Date date2 = c.getTime();
        c.set(1970, 0, 1, 0, 0, 0);
        Date date3 = c.getTime();
        c.set(1918, 10, 11, 11, 0, 0);
        Date date4 = c.getTime();
        c.set(1900, 0, 2, 0, 0, 0);
        Date date5 = c.getTime();
        c.set(1901, 0, 1, 0, 0, 0);
        Date date6 = c.getTime();
        c.set(1900, 4, 31, 0, 0, 0);
        Date date7 = c.getTime();
        c.set(1900, 1, 1, 0, 0, 0);
        Date date8 = c.getTime();
        c.set(1900, 0, 31, 0, 0, 0);
        Date date9 = c.getTime();
        c.set(1900, 2, 1, 0, 0, 0);
        Date date10 = c.getTime();
        c.set(1900, 1, 27, 0, 0, 0);
        Date date11 = c.getTime();
        c.set(1900, 1, 28, 0, 0, 0);
        Date date12 = c.getTime();
        c.set(1980, 5, 31, 12, 0, 0);
        Date date13 = c.getTime();
        c.set(1066, 9, 14, 0, 0, 0);
        Date date14 = c.getTime();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd MMM yyyy HH:mm:ss.SSS");
        simpleDateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
        s.addCell(new Label(0, 0, new StringBuffer().append("All dates are ").append(simpleDateFormat.format(date)).toString(), writableCellFormat));
        s.addCell(new Label(0, 1, "Built in formats", writableCellFormat));
        s.addCell(new Label(2, 1, "Custom formats"));
        WritableSheet writableSheet = s;
        writableSheet.addCell(new DateTime(0, 2, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT1), DateTime.GMT));
        WritableSheet writableSheet2 = s;
        writableSheet2.addCell(new DateTime(0, 3, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT2), DateTime.GMT));
        s.addCell(new DateTime(0, 4, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT3)));
        s.addCell(new DateTime(0, 5, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT4)));
        s.addCell(new DateTime(0, 6, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT5)));
        s.addCell(new DateTime(0, 7, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT6)));
        WritableSheet writableSheet3 = s;
        writableSheet3.addCell(new DateTime(0, 8, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT7), DateTime.GMT));
        WritableSheet writableSheet4 = s;
        writableSheet4.addCell(new DateTime(0, 9, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT8), DateTime.GMT));
        WritableSheet writableSheet5 = s;
        writableSheet5.addCell(new DateTime(0, 10, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        WritableSheet writableSheet6 = s;
        writableSheet6.addCell(new DateTime(0, 11, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT10), DateTime.GMT));
        WritableSheet writableSheet7 = s;
        writableSheet7.addCell(new DateTime(0, 12, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT11), DateTime.GMT));
        WritableSheet writableSheet8 = s;
        writableSheet8.addCell(new DateTime(0, 13, date, (CellFormat) new WritableCellFormat(DateFormats.FORMAT12), DateTime.GMT));
        WritableCellFormat cf1 = new WritableCellFormat((DisplayFormat) new DateFormat("dd MM yyyy"));
        s.addCell(new Label(2, 2, "dd MM yyyy"));
        WritableSheet writableSheet9 = s;
        writableSheet9.addCell(new DateTime(3, 2, date, (CellFormat) cf1, DateTime.GMT));
        WritableCellFormat cf12 = new WritableCellFormat((DisplayFormat) new DateFormat("dd MMM yyyy"));
        s.addCell(new Label(2, 3, "dd MMM yyyy"));
        WritableSheet writableSheet10 = s;
        writableSheet10.addCell(new DateTime(3, 3, date, (CellFormat) cf12, DateTime.GMT));
        WritableCellFormat cf13 = new WritableCellFormat((DisplayFormat) new DateFormat("hh:mm"));
        s.addCell(new Label(2, 4, "hh:mm"));
        WritableSheet writableSheet11 = s;
        writableSheet11.addCell(new DateTime(3, 4, date, (CellFormat) cf13, DateTime.GMT));
        WritableCellFormat cf14 = new WritableCellFormat((DisplayFormat) new DateFormat("hh:mm:ss"));
        s.addCell(new Label(2, 5, "hh:mm:ss"));
        WritableSheet writableSheet12 = s;
        writableSheet12.addCell(new DateTime(3, 5, date, (CellFormat) cf14, DateTime.GMT));
        WritableCellFormat cf15 = new WritableCellFormat((DisplayFormat) new DateFormat("H:mm:ss a"));
        s.addCell(new Label(2, 5, "H:mm:ss a"));
        WritableSheet writableSheet13 = s;
        writableSheet13.addCell(new DateTime(3, 5, date, (CellFormat) cf15, DateTime.GMT));
        WritableSheet writableSheet14 = s;
        writableSheet14.addCell(new DateTime(4, 5, date13, (CellFormat) cf15, DateTime.GMT));
        WritableCellFormat cf16 = new WritableCellFormat((DisplayFormat) new DateFormat("mm:ss.SSS"));
        s.addCell(new Label(2, 6, "mm:ss.SSS"));
        WritableSheet writableSheet15 = s;
        writableSheet15.addCell(new DateTime(3, 6, date, (CellFormat) cf16, DateTime.GMT));
        WritableCellFormat cf17 = new WritableCellFormat((DisplayFormat) new DateFormat("hh:mm:ss a"));
        s.addCell(new Label(2, 7, "hh:mm:ss a"));
        WritableSheet writableSheet16 = s;
        writableSheet16.addCell(new DateTime(4, 7, date13, (CellFormat) cf17, DateTime.GMT));
        s.addCell(new Label(0, 16, new StringBuffer().append("Zero date ").append(simpleDateFormat.format(date2)).toString(), writableCellFormat));
        WritableSheet writableSheet17 = s;
        writableSheet17.addCell(new DateTime(0, 17, date2, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 16, new StringBuffer().append("Zero date + 1 ").append(simpleDateFormat.format(date5)).toString(), writableCellFormat));
        WritableSheet writableSheet18 = s;
        writableSheet18.addCell(new DateTime(3, 17, date5, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 19, simpleDateFormat.format(date6), writableCellFormat));
        WritableSheet writableSheet19 = s;
        writableSheet19.addCell(new DateTime(3, 20, date6, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 22, simpleDateFormat.format(date7), writableCellFormat));
        WritableSheet writableSheet20 = s;
        writableSheet20.addCell(new DateTime(3, 23, date7, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 25, simpleDateFormat.format(date8), writableCellFormat));
        WritableSheet writableSheet21 = s;
        writableSheet21.addCell(new DateTime(3, 26, date8, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 28, simpleDateFormat.format(date9), writableCellFormat));
        WritableSheet writableSheet22 = s;
        writableSheet22.addCell(new DateTime(3, 29, date9, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 28, simpleDateFormat.format(date9), writableCellFormat));
        WritableSheet writableSheet23 = s;
        writableSheet23.addCell(new DateTime(3, 29, date9, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 31, simpleDateFormat.format(date10), writableCellFormat));
        WritableSheet writableSheet24 = s;
        writableSheet24.addCell(new DateTime(3, 32, date10, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 34, simpleDateFormat.format(date11), writableCellFormat));
        WritableSheet writableSheet25 = s;
        writableSheet25.addCell(new DateTime(3, 35, date11, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(3, 37, simpleDateFormat.format(date12), writableCellFormat));
        WritableSheet writableSheet26 = s;
        writableSheet26.addCell(new DateTime(3, 38, date12, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(0, 19, new StringBuffer().append("Zero UTC date ").append(simpleDateFormat.format(date3)).toString(), writableCellFormat));
        WritableSheet writableSheet27 = s;
        writableSheet27.addCell(new DateTime(0, 20, date3, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(0, 22, new StringBuffer().append("Armistice date ").append(simpleDateFormat.format(date4)).toString(), writableCellFormat));
        WritableSheet writableSheet28 = s;
        writableSheet28.addCell(new DateTime(0, 23, date4, (CellFormat) new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
        s.addCell(new Label(0, 25, new StringBuffer().append("Battle of Hastings ").append(simpleDateFormat.format(date14)).toString(), writableCellFormat));
        WritableSheet writableSheet29 = s;
        writableSheet29.addCell(new DateTime(0, 26, date14, (CellFormat) new WritableCellFormat(DateFormats.FORMAT2), DateTime.GMT));
    }

    private void writeLabelFormatSheet(WritableSheet s1) throws WriteException {
        s1.setColumnView(0, 60);
        s1.addCell(new Label(0, 0, "Arial Fonts"));
        s1.addCell(new Label(1, 0, "10pt"));
        s1.addCell(new Label(2, 0, "Normal"));
        s1.addCell(new Label(3, 0, "12pt"));
        WritableCellFormat arial12format = new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 12));
        arial12format.setWrap(true);
        s1.addCell(new Label(4, 0, "Normal", arial12format));
        s1.addCell(new Label(2, 2, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.BOLD))));
        s1.addCell(new Label(4, 2, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 12, WritableFont.BOLD))));
        s1.addCell(new Label(2, 4, "Italic", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, true))));
        s1.addCell(new Label(4, 4, "Italic", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 12, WritableFont.NO_BOLD, true))));
        WritableCellFormat times10format = new WritableCellFormat(new WritableFont(WritableFont.TIMES, 10));
        s1.addCell(new Label(0, 7, "Times Fonts", times10format));
        s1.addCell(new Label(1, 7, "10pt", times10format));
        s1.addCell(new Label(2, 7, "Normal", times10format));
        s1.addCell(new Label(3, 7, "12pt", times10format));
        WritableFont writableFont = new WritableFont(WritableFont.TIMES, 12);
        s1.addCell(new Label(4, 7, "Normal", new WritableCellFormat(writableFont)));
        s1.addCell(new Label(2, 9, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.TIMES, 10, WritableFont.BOLD))));
        s1.addCell(new Label(4, 9, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.TIMES, 12, WritableFont.BOLD))));
        s1.setColumnView(6, 22);
        s1.setColumnView(7, 22);
        s1.setColumnView(8, 22);
        s1.setColumnView(9, 22);
        s1.addCell(new Label(0, 11, "Underlining"));
        s1.addCell(new Label(6, 11, "Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.SINGLE))));
        s1.addCell(new Label(7, 11, "Double Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.DOUBLE))));
        s1.addCell(new Label(8, 11, "Single Accounting Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.SINGLE_ACCOUNTING))));
        s1.addCell(new Label(9, 11, "Double Accounting Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.DOUBLE_ACCOUNTING))));
        WritableCellFormat writableCellFormat = new WritableCellFormat(new WritableFont(WritableFont.TIMES, 14, WritableFont.BOLD, false, UnderlineStyle.SINGLE));
        s1.addCell(new Label(6, 12, "Times 14 Bold Underline", writableCellFormat));
        s1.addCell(new Label(6, 13, "Arial 18 Bold Italic Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 18, WritableFont.BOLD, true, UnderlineStyle.SINGLE))));
        s1.addCell(new Label(0, 15, "Script styles"));
        s1.addCell(new Label(1, 15, "superscript", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLACK, ScriptStyle.SUPERSCRIPT))));
        s1.addCell(new Label(2, 15, "subscript", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLACK, ScriptStyle.SUBSCRIPT))));
        s1.addCell(new Label(0, 17, "Colours"));
        s1.addCell(new Label(2, 17, "Red", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.RED))));
        s1.addCell(new Label(2, 18, "Blue", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLUE))));
        WritableFont writableFont2 = new WritableFont(WritableFont.ARIAL);
        writableFont2.setColour(Colour.LIME);
        WritableCellFormat writableCellFormat2 = new WritableCellFormat(writableFont2);
        writableCellFormat2.setWrap(true);
        s1.addCell(new Label(4, 18, "Modified palette - was lime, now red", writableCellFormat2));
        WritableCellFormat greyBackground = new WritableCellFormat();
        greyBackground.setWrap(true);
        greyBackground.setBackground(Colour.GRAY_50);
        s1.addCell(new Label(2, 19, "Grey background", greyBackground));
        WritableCellFormat writableCellFormat3 = new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.YELLOW));
        writableCellFormat3.setWrap(true);
        writableCellFormat3.setBackground(Colour.BLUE);
        s1.addCell(new Label(2, 20, "Blue background, yellow foreground", writableCellFormat3));
        s1.addCell(new Label(0, 22, "Null label"));
        s1.addCell(new Label(2, 22, (String) null));
        s1.addCell(new Label(0, 24, "A very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nAnd sat and drank coffee an talked for an hour\n", arial12format));
        WritableCellFormat vertical = new WritableCellFormat();
        vertical.setOrientation(Orientation.VERTICAL);
        s1.addCell(new Label(0, 26, "Vertical orientation", vertical));
        WritableCellFormat plus_90 = new WritableCellFormat();
        plus_90.setOrientation(Orientation.PLUS_90);
        s1.addCell(new Label(1, 26, "Plus 90", plus_90));
        WritableCellFormat minus_90 = new WritableCellFormat();
        minus_90.setOrientation(Orientation.MINUS_90);
        s1.addCell(new Label(2, 26, "Minus 90", minus_90));
        s1.addCell(new Label(0, 28, "Modified row height"));
        s1.setRowView(28, 24);
        s1.addCell(new Label(0, 29, "Collapsed row"));
        s1.setRowView(29, true);
        try {
            s1.addCell(new Label(0, 30, "Hyperlink to home page"));
            URL url = new URL("http://www.andykhan.com/jexcelapi");
            s1.addHyperlink(new WritableHyperlink(0, 30, 8, 31, url));
            s1.addHyperlink(new WritableHyperlink(7, 30, 9, 31, url));
            s1.addCell(new Label(4, 2, "File hyperlink to documentation"));
            s1.addHyperlink(new WritableHyperlink(0, 32, 8, 32, new File("../jexcelapi/docs/index.html")));
            s1.addHyperlink(new WritableHyperlink(0, 34, 8, 34, "Link to another cell", s1, 0, Opcodes.GETFIELD, 1, Opcodes.PUTFIELD));
            s1.addHyperlink(new WritableHyperlink(0, 36, 8, 36, new File("\\\\localhost\\file.txt")));
            s1.addHyperlink(new WritableHyperlink(0, 38, 0, 38, new URL("http://www.amazon.co.uk/exec/obidos/ASIN/0571058086/qid=1099836249/sr=1-3/ref=sr_1_11_3/202-6017285-1620664")));
        } catch (MalformedURLException e) {
            System.err.println(e.toString());
        }
        Label label = new Label(5, 35, "Merged cells", writableCellFormat);
        s1.mergeCells(5, 35, 8, 37);
        s1.addCell(label);
        s1.addCell(new Label(5, 38, "More merged cells"));
        Range r = s1.mergeCells(5, 38, 8, 41);
        s1.insertRow(40);
        s1.removeRow(39);
        s1.unmergeCells(r);
        WritableCellFormat wcf = new WritableCellFormat();
        wcf.setAlignment(Alignment.CENTRE);
        s1.addCell(new Label(5, 42, "Centred across merged cells", wcf));
        s1.mergeCells(5, 42, 10, 42);
        WritableCellFormat wcf2 = new WritableCellFormat();
        wcf2.setBorder(Border.ALL, BorderLineStyle.THIN);
        wcf2.setBackground(Colour.GRAY_25);
        s1.addCell(new Label(3, 44, "Merged with border", wcf2));
        s1.mergeCells(3, 44, 4, 46);
        s1.addCell(new Label(0, 49, "Courier fonts", new WritableCellFormat(new WritableFont(WritableFont.COURIER, 10))));
        s1.addCell(new Label(0, 50, "Tahoma fonts", new WritableCellFormat(new WritableFont(WritableFont.TAHOMA, 12))));
        s1.addCell(new Label(0, 51, "Bespoke Windgdings 2", new WritableCellFormat(new WritableFont(WritableFont.createFont("Wingdings 2"), 10))));
        WritableCellFormat writableCellFormat4 = new WritableCellFormat(writableFont);
        writableCellFormat4.setShrinkToFit(true);
        s1.addCell(new Label(3, 53, "Shrunk to fit", writableCellFormat4));
        s1.addCell(new Label(3, 55, "Some long wrapped text in a merged cell", arial12format));
        s1.mergeCells(3, 55, 4, 55);
        Label label2 = new Label(0, 57, "A cell with a comment");
        WritableCellFeatures cellFeatures = new WritableCellFeatures();
        cellFeatures.setComment("the cell comment");
        label2.setCellFeatures(cellFeatures);
        s1.addCell(label2);
        Label label3 = new Label(0, 59, "A cell with a long comment");
        WritableCellFeatures cellFeatures2 = new WritableCellFeatures();
        cellFeatures2.setComment("a very long cell comment indeed that won't fit inside a standard comment box, so a larger comment box is used instead", 5.0d, 6.0d);
        label3.setCellFeatures(cellFeatures2);
        s1.addCell(label3);
        WritableCellFormat writableCellFormat5 = new WritableCellFormat(writableFont);
        writableCellFormat5.setIndentation(4);
        s1.addCell(new Label(0, 61, "Some indented text", writableCellFormat5));
    }

    private void writeBordersSheet(WritableSheet s) throws WriteException {
        s.getSettings().setProtected(true);
        s.setColumnView(1, 15);
        s.setColumnView(2, 15);
        s.setColumnView(4, 15);
        WritableCellFormat thickLeft = new WritableCellFormat();
        thickLeft.setBorder(Border.LEFT, BorderLineStyle.THICK);
        s.addCell(new Label(1, 0, "Thick left", thickLeft));
        WritableCellFormat dashedRight = new WritableCellFormat();
        dashedRight.setBorder(Border.RIGHT, BorderLineStyle.DASHED);
        s.addCell(new Label(2, 0, "Dashed right", dashedRight));
        WritableCellFormat doubleTop = new WritableCellFormat();
        doubleTop.setBorder(Border.TOP, BorderLineStyle.DOUBLE);
        s.addCell(new Label(1, 2, "Double top", doubleTop));
        WritableCellFormat hairBottom = new WritableCellFormat();
        hairBottom.setBorder(Border.BOTTOM, BorderLineStyle.HAIR);
        s.addCell(new Label(2, 2, "Hair bottom", hairBottom));
        WritableCellFormat allThin = new WritableCellFormat();
        allThin.setBorder(Border.ALL, BorderLineStyle.THIN);
        s.addCell(new Label(4, 2, "All thin", allThin));
        WritableCellFormat twoBorders = new WritableCellFormat();
        twoBorders.setBorder(Border.TOP, BorderLineStyle.THICK);
        twoBorders.setBorder(Border.LEFT, BorderLineStyle.THICK);
        s.addCell(new Label(6, 2, "Two borders", twoBorders));
        s.addCell(new Label(20, 20, "Dislocated cell - after a page break"));
        s.getSettings().setPaperSize(PaperSize.A3);
        s.getSettings().setOrientation(PageOrientation.LANDSCAPE);
        s.getSettings().setHeaderMargin(2.0d);
        s.getSettings().setFooterMargin(2.0d);
        s.getSettings().setTopMargin(3.0d);
        s.getSettings().setBottomMargin(3.0d);
        HeaderFooter header = new HeaderFooter();
        header.getCentre().append("Page Header");
        s.getSettings().setHeader(header);
        HeaderFooter footer = new HeaderFooter();
        footer.getRight().append("page ");
        footer.getRight().appendPageNumber();
        s.getSettings().setFooter(footer);
        s.addRowPageBreak(18);
        s.insertRow(17);
        s.insertRow(17);
        s.removeRow(17);
        s.addRowPageBreak(30);
        s.addCell(new Label(10, 1, "Hidden column"));
        s.addCell(new Label(3, 8, "Hidden row"));
        s.setRowView(8, true);
        WritableCellFormat allThickRed = new WritableCellFormat();
        allThickRed.setBorder(Border.ALL, BorderLineStyle.THICK, Colour.RED);
        s.addCell(new Label(1, 5, "All thick red", allThickRed));
        WritableCellFormat topBottomBlue = new WritableCellFormat();
        topBottomBlue.setBorder(Border.TOP, BorderLineStyle.THIN, Colour.BLUE);
        topBottomBlue.setBorder(Border.BOTTOM, BorderLineStyle.THIN, Colour.BLUE);
        s.addCell(new Label(4, 5, "Top and bottom blue", topBottomBlue));
    }

    private void writeLabelsSheet(WritableSheet ws) throws WriteException {
        ws.getSettings().setProtected(true);
        ws.getSettings().setPassword("jxl");
        ws.getSettings().setVerticalFreeze(5);
        WritableFont wf = new WritableFont(WritableFont.ARIAL, 12);
        wf.setItalic(true);
        WritableCellFormat wcf = new WritableCellFormat(wf);
        CellView cv = new CellView();
        cv.setSize(6400);
        cv.setFormat(wcf);
        ws.setColumnView(0, cv);
        ws.setColumnView(1, 15);
        for (int i = 0; i < 61; i++) {
            Label l1 = new Label(0, i, "Common Label");
            Label l2 = new Label(1, i, new StringBuffer().append("Distinct label number ").append(i).toString());
            ws.addCell(l1);
            ws.addCell(l2);
        }
        Label l3 = new Label(0, 61, "Common Label", wcf);
        Label l4 = new Label(1, 61, "1-1234567890", wcf);
        Label l5 = new Label(2, 61, "2-1234567890", wcf);
        ws.addCell(l3);
        ws.addCell(l4);
        ws.addCell(l5);
        for (int i2 = 62; i2 < 200; i2++) {
            Label l12 = new Label(0, i2, "Common Label");
            Label l22 = new Label(1, i2, new StringBuffer().append("Distinct label number ").append(i2).toString());
            ws.addCell(l12);
            ws.addCell(l22);
        }
        WritableFont wf2 = new WritableFont(WritableFont.TIMES, 10, WritableFont.BOLD);
        wf2.setColour(Colour.RED);
        WritableCellFormat wcf2 = new WritableCellFormat(wf2);
        wcf2.setWrap(true);
        ws.addCell(new Label(0, 205, "Different format", wcf2));
    }

    private void writeFormulaSheet(WritableSheet ws) throws WriteException {
        ws.addCell(new Number(0, 0, 15.0d));
        ws.addCell(new Number(0, 1, 16.0d));
        ws.addCell(new Number(0, 2, 10.0d));
        ws.addCell(new Number(0, 3, 12.0d));
        ws.setColumnView(2, 20);
        WritableCellFormat wcf = new WritableCellFormat();
        wcf.setAlignment(Alignment.RIGHT);
        wcf.setWrap(true);
        CellView cv = new CellView();
        cv.setSize(6400);
        cv.setFormat(wcf);
        ws.setColumnView(3, cv);
        ws.addCell(new Formula(2, 0, "A1+A2"));
        ws.addCell(new Label(3, 0, "a1+a2"));
        ws.addCell(new Formula(2, 1, "A2 * 3"));
        ws.addCell(new Label(3, 1, "A2 * 3"));
        ws.addCell(new Formula(2, 2, "A2+A1/2.5"));
        ws.addCell(new Label(3, 2, "A2+A1/2.5"));
        ws.addCell(new Formula(2, 3, "3+(a1+a2)/2.5"));
        ws.addCell(new Label(3, 3, "3+(a1+a2)/2.5"));
        ws.addCell(new Formula(2, 4, "(a1+a2)/2.5"));
        ws.addCell(new Label(3, 4, "(a1+a2)/2.5"));
        ws.addCell(new Formula(2, 5, "15+((a1+a2)/2.5)*17"));
        ws.addCell(new Label(3, 5, "15+((a1+a2)/2.5)*17"));
        ws.addCell(new Formula(2, 6, "SUM(a1:a4)"));
        ws.addCell(new Label(3, 6, "SUM(a1:a4)"));
        ws.addCell(new Formula(2, 7, "SUM(a1:a4)/4"));
        ws.addCell(new Label(3, 7, "SUM(a1:a4)/4"));
        ws.addCell(new Formula(2, 8, "AVERAGE(A1:A4)"));
        ws.addCell(new Label(3, 8, "AVERAGE(a1:a4)"));
        ws.addCell(new Formula(2, 9, "MIN(5,4,1,2,3)"));
        ws.addCell(new Label(3, 9, "MIN(5,4,1,2,3)"));
        ws.addCell(new Formula(2, 10, "ROUND(3.14159265, 3)"));
        ws.addCell(new Label(3, 10, "ROUND(3.14159265, 3)"));
        ws.addCell(new Formula(2, 11, "MAX(SUM(A1:A2), A1*A2, POWER(A1, 2))"));
        ws.addCell(new Label(3, 11, "MAX(SUM(A1:A2), A1*A2, POWER(A1, 2))"));
        ws.addCell(new Formula(2, 12, "IF(A2>A1, \"A2 bigger\", \"A1 bigger\")"));
        ws.addCell(new Label(3, 12, "IF(A2>A1, \"A2 bigger\", \"A1 bigger\")"));
        ws.addCell(new Formula(2, 13, "IF(A2<=A1, \"A2 smaller\", \"A1 smaller\")"));
        ws.addCell(new Label(3, 13, "IF(A2<=A1, \"A2 smaller\", \"A1 smaller\")"));
        ws.addCell(new Formula(2, 14, "IF(A3<=10, \"<= 10\")"));
        ws.addCell(new Label(3, 14, "IF(A3<=10, \"<= 10\")"));
        ws.addCell(new Formula(2, 15, "SUM(1,2,3,4,5)"));
        ws.addCell(new Label(3, 15, "SUM(1,2,3,4,5)"));
        ws.addCell(new Formula(2, 16, "HYPERLINK(\"http://www.andykhan.com/jexcelapi\", \"JExcelApi Home Page\")"));
        ws.addCell(new Label(3, 16, "HYPERLINK(\"http://www.andykhan.com/jexcelapi\", \"JExcelApi Home Page\")"));
        ws.addCell(new Formula(2, 17, "3*4+5"));
        ws.addCell(new Label(3, 17, "3*4+5"));
        ws.addCell(new Formula(2, 18, "\"Plain text formula\""));
        ws.addCell(new Label(3, 18, "Plain text formula"));
        ws.addCell(new Formula(2, 19, "SUM(a1,a2,-a3,a4)"));
        ws.addCell(new Label(3, 19, "SUM(a1,a2,-a3,a4)"));
        ws.addCell(new Formula(2, 20, "2*-(a1+a2)"));
        ws.addCell(new Label(3, 20, "2*-(a1+a2)"));
        ws.addCell(new Formula(2, 21, "Number Formats!B1/2"));
        ws.addCell(new Label(3, 21, "Number Formats!B1/2"));
        ws.addCell(new Formula(2, 22, "IF(F22=0, 0, F21/F22)"));
        ws.addCell(new Label(3, 22, "IF(F22=0, 0, F21/F22)"));
        ws.addCell(new Formula(2, 23, "RAND()"));
        ws.addCell(new Label(3, 23, "RAND()"));
        StringBuffer buf = new StringBuffer();
        buf.append("'");
        buf.append(this.workbook.getSheet(0).getName());
        buf.append("'!");
        buf.append(CellReferenceHelper.getCellReference(9, 18));
        buf.append("*25");
        ws.addCell(new Formula(2, 24, buf.toString()));
        ws.addCell(new Label(3, 24, buf.toString()));
        ws.addCell(new Formula(2, 25, "NOW()", new WritableCellFormat(DateFormats.DEFAULT)));
        ws.addCell(new Label(3, 25, "NOW()"));
        ws.addCell(new Formula(2, 26, "$A$2+A3"));
        ws.addCell(new Label(3, 26, "$A$2+A3"));
        ws.addCell(new Formula(2, 27, "IF(COUNT(A1:A9,B1:B9)=0,\"\",COUNT(A1:A9,B1:B9))"));
        ws.addCell(new Label(3, 27, "IF(COUNT(A1:A9,B1:B9)=0,\"\",COUNT(A1:A9,B1:B9))"));
        ws.addCell(new Formula(2, 28, "SUM(A1,A2,A3,A4)"));
        ws.addCell(new Label(3, 28, "SUM(A1,A2,A3,A4)"));
        ws.addCell(new Label(1, 29, "a1"));
        ws.addCell(new Formula(2, 29, "SUM(INDIRECT(ADDRESS(2,29)):A4)"));
        ws.addCell(new Label(3, 29, "SUM(INDIRECT(ADDRESS(2,29):A4)"));
        ws.addCell(new Formula(2, 30, "COUNTIF(A1:A4, \">=12\")"));
        ws.addCell(new Label(3, 30, "COUNTIF(A1:A4, \">=12\")"));
        ws.addCell(new Formula(2, 31, "MAX($A$1:$A$4)"));
        ws.addCell(new Label(3, 31, "MAX($A$1:$A$4)"));
        ws.addCell(new Formula(2, 32, "OR(A1,TRUE)"));
        ws.addCell(new Label(3, 32, "OR(A1,TRUE)"));
        ws.addCell(new Formula(2, 33, "ROWS(A1:C14)"));
        ws.addCell(new Label(3, 33, "ROWS(A1:C14)"));
        ws.addCell(new Formula(2, 34, "COUNTBLANK(A1:C14)"));
        ws.addCell(new Label(3, 34, "COUNTBLANK(A1:C14)"));
        ws.addCell(new Formula(2, 35, "IF(((F1=\"Not Found\")*(F2=\"Not Found\")*(F3=\"\")*(F4=\"\")*(F5=\"\")),1,0)"));
        ws.addCell(new Label(3, 35, "IF(((F1=\"Not Found\")*(F2=\"Not Found\")*(F3=\"\")*(F4=\"\")*(F5=\"\")),1,0)"));
        ws.addCell(new Formula(2, 36, "HYPERLINK(\"http://www.amazon.co.uk/exec/obidos/ASIN/0571058086qid=1099836249/sr=1-3/ref=sr_1_11_3/202-6017285-1620664\",  \"Long hyperlink\")"));
        ws.addCell(new Formula(2, 37, "1234567+2699"));
        ws.addCell(new Label(3, 37, "1234567+2699"));
    }

    private void writeImageSheet(WritableSheet ws) throws WriteException {
        ws.addCell(new Label(0, 0, "Weald & Downland Open Air Museum, Sussex"));
        ws.addImage(new WritableImage(0.0d, 3.0d, 5.0d, 7.0d, new File("resources/wealdanddownland.png")));
        ws.addCell(new Label(0, 12, "Merchant Adventurers Hall, York"));
        ws.addImage(new WritableImage(5.0d, 12.0d, 4.0d, 10.0d, new File("resources/merchantadventurers.png")));
    }
}
